from datetime import datetime

def generate_daily_tips():
    # Sample match data â€” in real use, replace with actual scraped/API match feed
    matches = [
        {"team_a": "Ludogorets", "team_b": "CSKA 1948", "market": "Over 2.5", "odds": 1.95, "ev": 0.12, "start_time": datetime.now().replace(hour=17, minute=30)},
        {"team_a": "Levski", "team_b": "Botev", "market": "Levski to Win", "odds": 2.2, "ev": 0.08, "start_time": datetime.now().replace(hour=20, minute=0)},
        {"team_a": "Slavia", "team_b": "Cherno More", "market": "Draw", "odds": 3.4, "ev": 0.04, "start_time": datetime.now().replace(hour=21, minute=0)},
    ]

    bankroll = 1000
    min_ev_threshold = 0.05
    odds_range = (1.80, 2.60)
    
    today = datetime.now()
    today_str = today.strftime('%Y-%m-%d')
    tips = []

    for match in matches:
        if match["start_time"].date() != today.date():
            continue
        if match["ev"] >= min_ev_threshold and odds_range[0] <= match["odds"] <= odds_range[1]:
            stake = round((bankroll * match["ev"]) / 3, 2)
            tips.append(f"{match['team_a']} vs {match['team_b']} â€” {match['market']} @ {match['odds']} (Stake: â‚¬{stake})")

    if not tips:
        tips.append("No value tips found for today.")

    return (
        f"ğŸ“Š Here are todayâ€™s betting tips ({today_str}):\n\n" +
        "\n".join(f"{i+1}. {tip}" for i, tip in enumerate(tips)) +
        "\n\n(Generated by SmartEdge AI model with value filtering)"
    )
